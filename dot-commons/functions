# Functions #
function home() {
  ip=`ifconfig | grep broadcast | grep inet | cut -d" " -f2`
  if [ -z "$ip" ]
    then
      host=`hostname`.local;
    else
      host=$ip
  fi
  op -a "/Applications/Google Chrome.app" http://$host/~$USER;
}

function git-status {
  [[ $(git status 2> /dev/null | tail -n1) == "fatal: Not a git repository (or any of the parent directories): .git" ]] ||
    [[ $(git status 2> /dev/null | tail -n1) == "no changes added to commit (use \"git add\" and/or \"git commit -a\")" ]] &&
      echo "*"
}

function git-branch() {
  git branch --no-color 2> /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\(\1\)/'
}

function clone-pr() {
  remote=`git remote| grep upstream`
  if [ "$remote" != "upstream" ] ; then
    remote="origin"
  fi

  pattern="^[0-9]+$"
  if [[ $1 =~ $pattern ]] ; then
    git fetch $remote pull/$1/head:pull-request-$1
  else
    echo "pull request id must be a positive number";
  fi
}

function clone-rb() {
  pattern="^[0-9]+$"
  if [[ $1 =~ $pattern ]] ; then
    url="https://$RB_HOST/r/$1/diff/raw/"
    git checkout -b "rb-$1";
    filename="rb-$1.patch";
    curl -o $filename $url;
    git apply "$filename";
    rm -rf $filename
    git commit -am "applied $filename"
  else
    echo "review board id must be a positive number";
  fi
}

function shell() {
  ps | grep $$ | grep -v grep | awk '{print $4}' | sed -e 's/^.*\/bin\///g' -e 's/\-//g'
}

# cd into whatever is the forefront Finder window.
cdf() {  # short for cdfinder
  cd "`osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)'`"
}
