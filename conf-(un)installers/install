#!/bin/sh

# Create ~/GitCorp directory, if not exists
if [ ! -d ~/GitCorp ]; then
  echo "creating ~/GitCorp"
  mkdir ~/GitCorp;
  echo "command executed: mkdir ~/GitCorp;"
  echo "created ~/GitCorp"
fi

# Create ~/Sites directory, if not exists
if [ ! -d ~/Sites ]; then
  echo "creating ~/Sites"
  mkdir ~/Sites;
  echo "command executed: mkdir ~/Sites;"
  echo "created ~/Sites"
fi

# Create ~/Downloads directory, if not exists
if [ ! -d ~/Downloads ]; then
  echo "creating ~/Downloads"
  mkdir ~/Downloads;
  echo "command executed: mkdir ~/Downloads;"
  echo "created ~/Downloads"
fi

# Create ~/.vim/view directory, if not exists
if [ ! -d ~/.vim/view ]; then
  echo "creating ~/.vim/view"
  mkdir -p ~/.vim/view;
  echo "command executed: mkdir -p ~/.vim/view;"
  echo "created ~/.vim/view"
fi

# Create ~/.vim/autoload directory, if not exists
if [ ! -d ~/.vim/autoload ]; then
  echo "creating ~/.vim/autoload"
  mkdir -p ~/.vim/autoload;
  echo "command executed: mkdir -p ~/.vim/autoload;"
  echo "created ~/.vim/autoload"
fi

# Create ~/.vim/bundle directory, if not exists
if [ ! -d ~/.vim/bundle ]; then
  echo "creating ~/.vim/bundle"
  mkdir -p ~/.vim/bundle;
  echo "command executed: mkdir -p ~/.vim/bundle;"
  echo "created ~/.vim/bundle"
fi

# Create ~/.vim/autoload/pathogen.vim, if not exists
if [ ! -f ~/.vim/autoload/pathogen.vim ]; then
  echo "creating ~/.vim/autoload/pathogen.vim"
  curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim;
  echo "command executed: curl -LSso ~/.vim/autoload/pathogen.vim https://tpo.pe/pathogen.vim;"
  echo "created ~/.vim/autoload/pathogen.vim"
fi

# Backup existing files
existingConfFileNames=('.common-shell-confs' '.bash-confs' '.zsh-confs' '.git-confs' '.vim-confs' '.bashrc' '.bash_profile' '.zshrc' '.zprofile' '.gitconfig' 'gitignore_global' '.vimrc' '.screenrc');
for existingConfFileName in "${existingConfFileNames[@]}"
do
  if [ -f ~/$existingConfFileName -o -d ~/$existingConfFileName -o -L ~/$existingConfFileName ]; then
    modifiedConfFileName=$existingConfFileName-prev;
    echo "backing up  ~/$existingConfFileName as ~/$modifiedConfFileName"
    mv ~/$existingConfFileName ~/$modifiedConfFileName
    echo "command executed: mv ~/$existingConfFileName ~/$modifiedConfFileName"
    echo "backed up  ~/$existingConfFileName as ~/$modifiedConfFileName"
    echo
  fi
done

# Create SymLinks
# ToDo Make the path relative
confDirNames=('common-shell-confs' 'bash-confs' 'zsh-confs' 'git-confs' 'vim-confs' 'screen-confs');
for confDirName in "${confDirNames[@]}"
do
  if [ -d ~/GitHub/conf-files/$confDirName ]; then
    echo "creating SymLink ~/.$confDirName to ~/GitHub/conf-files/$confDirName"
    ln -s  ~/GitHub/conf-files/$confDirName ~/.$confDirName
    echo "command executed: ln -s  ~/GitHub/conf-files/$confDirName ~/.$confDirName"
    echo "created SymLink ~/.$confDirName to ~/GitHub/conf-files/$confDirName"
    echo
  fi
done

confFileNames=('.bash-confs/bashrc' '.bash-confs/bash_profile' '.zsh-confs/zshrc' '.zsh-confs/zprofile' '.git-confs/gitconfig' '.git-confs/gitignore_global' '.vim-confs/vimrc' '.screen-confs/screenrc');
for confFileName in "${confFileNames[@]}"
do
  if [ -f ~/$confFileName ]; then
    symLinkName=.`echo ~/$confFileName | sed ' s!.*/!! ; s/"$// '`
    echo "creating SymLink ~/$symLinkName to ~/$confFileName"
    ln -s  ~/$confFileName ~/$symLinkName
    echo "command executed: ln -s  ~/$confFileName ~/$symLinkName"
    echo "created SymLink ~/$symLinkName to ~/$confFileName"
    echo
  fi
done
